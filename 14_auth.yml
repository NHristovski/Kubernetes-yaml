apiVersion: apps/v1
kind: Deployment
metadata:
    name: auth
    labels:
        app: auth
spec:
    replicas: 1
    selector:
        matchLabels:
            app: auth
    minReadySeconds: 10
    strategy:
        rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        type: RollingUpdate
    template:
        metadata:
            name: auth
            labels:
                app: auth
        spec:
            containers:
            - name: auth
              image: nikolahristovski/auth:0.0.1-SNAPSHOT
              ports:
              - containerPort: 9101
              imagePullPolicy: Always
            initContainers:  
            - name: init-service-discovery
              image: busybox:1.28
              command: ['sh', '-c', "until nslookup service-discovery-priv-service.default.svc.cluster.local; do echo waiting for service-discovery-priv-service.default.svc.cluster.local; sleep 2; done"]  
            - name: init-zipkin
              image: busybox:1.28
              command: ['sh', '-c', "until nslookup zipkin-service.default.svc.cluster.local; do echo waiting for zipkin-service.default.svc.cluster.local; sleep 2; done"]              
            - name: init-config-server
              image: busybox:1.28
              command: ['sh', '-c', "until nslookup config-server-service.default.svc.cluster.local; do echo waiting for config-server-service.default.svc.cluster.local; sleep 2; done"]   
            - name: init-kafka
              image: busybox:1.28
              command: ['sh', '-c', "until nslookup my-cluster-kafka-bootstrap.kafka.svc.cluster.local; do echo waiting for my-cluster-kafka-bootstrap.kafka.svc.cluster.local; sleep 2; done"]     
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: ClusterIP
  selector:
    app: auth
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9101
